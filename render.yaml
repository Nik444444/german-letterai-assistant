services:
  # Backend —Å–µ—Ä–≤–∏—Å - –∏—Å–ø–æ–ª—å–∑—É–µ–º Python buildpack –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  - type: web
    name: german-ai-backend
    env: python
    region: oregon
    plan: starter
    buildCommand: |
      set -euo pipefail
      echo "üîß RENDER BUILD START: Installing system dependencies for Tesseract OCR..."
      
      # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º tesseract
      apt-get update -y && apt-get install -y \
        tesseract-ocr \
        tesseract-ocr-deu \
        tesseract-ocr-rus \
        tesseract-ocr-eng \
        tesseract-ocr-ukr \
        libtesseract-dev \
        libgl1-mesa-glx \
        libglib2.0-0 \
        libsm6 \
        libxext6 \
        libxrender-dev \
        libgomp1 \
        poppler-utils \
        && echo "‚úÖ System packages installed successfully"
      
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º tesseract
      tesseract --version
      tesseract --list-langs
      echo "‚úÖ Tesseract verification complete"
      
      # –û–±–Ω–æ–≤–ª—è–µ–º pip –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      pip install --upgrade pip
      pip install -r backend/requirements.txt
      echo "‚úÖ Python packages installed"
      
      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º emergentintegrations —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      pip install emergentintegrations --extra-index-url https://d33sy5i8bnduwe.cloudfront.net/simple/ --trusted-host d33sy5i8bnduwe.cloudfront.net || echo "‚ö†Ô∏è emergentintegrations installation failed, will use fallback"
      
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      python -c "import pytesseract; print('‚úÖ pytesseract OK')" || (echo "‚ùå pytesseract failed" && exit 1)
      python -c "import cv2; print('‚úÖ opencv OK')" || (echo "‚ùå opencv failed" && exit 1)
      python -c "import PIL; print('‚úÖ Pillow OK')" || (echo "‚ùå Pillow failed" && exit 1)
      
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º emergentintegrations
      python -c "import emergentintegrations; print('‚úÖ emergentintegrations OK')" || echo "‚ö†Ô∏è emergentintegrations not available, will use fallback"
      
      # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
      mkdir -p /opt/render/project/src/backend/data
      
      echo "üéâ BUILD COMPLETED SUCCESSFULLY"
    startCommand: cd backend && uvicorn server:app --host 0.0.0.0 --port $PORT --workers 1
    envVars:
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: SQLITE_DB_PATH
        value: /opt/render/project/src/backend/data/german_ai.db
      - key: TESSERACT_AVAILABLE
        value: true
      - key: TESSERACT_VERSION
        value: 5.3.0
      - key: PATH
        value: /usr/bin:/usr/local/bin:/opt/render/project/src/.venv/bin:/home/render/.bun/bin:/opt/render/project/nodes/node-22.16.0/bin:/opt/render/project/src/.venv/bin:/opt/render/project/poetry/bin:/opt/render/project/uv/bin:/home/render/.python-poetry/bin:/usr/local/cargo/bin:/opt/render/project/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/render/bin
    
  # Frontend —Å–µ—Ä–≤–∏—Å
  - type: web
    name: german-ai-frontend
    env: docker
    region: oregon
    plan: starter
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: ./frontend
    buildCommand: ""
    startCommand: ""
    envVars:
      - key: REACT_APP_BACKEND_URL
        value: https://german-letterai-assistant.onrender.com
      - key: REACT_APP_GOOGLE_CLIENT_ID
        value: 364877380148-nhlcauaonsvm5j0feh5fltn3qsa6tffm.apps.googleusercontent.com