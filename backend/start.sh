#!/bin/bash
# –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π start.sh –¥–ª—è Render.com - –ù–ï –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–¢ –ü–ê–ö–ï–¢–´
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

echo "üöÄ Starting German AI Backend v12.0 - Production Mode..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π PATH
echo "Current PATH: $PATH"

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ tesseract (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏)
echo "Checking tesseract availability..."
if command -v tesseract &> /dev/null; then
    echo "‚úÖ tesseract found in PATH"
    tesseract --version | head -1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    echo "Available languages:"
    tesseract --list-langs 2>/dev/null || echo "Could not list languages"
else
    echo "‚ùå tesseract not found in PATH"
    echo "‚ö†Ô∏è OCR functionality will be limited"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º emergentintegrations
echo "Checking emergentintegrations..."
if python -c "import emergentintegrations; print('emergentintegrations OK')" 2>/dev/null; then
    echo "‚úÖ emergentintegrations available"
else
    echo "‚ùå emergentintegrations not available"
    echo "‚ö†Ô∏è Running in fallback mode without emergentintegrations"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "Checking Python dependencies..."
python -c "import pytesseract; print('pytesseract OK')" 2>/dev/null || echo "‚ùå pytesseract not available"
python -c "import cv2; print('opencv-python OK')" 2>/dev/null || echo "‚ùå opencv-python not available"
python -c "import PIL; print('Pillow OK')" 2>/dev/null || echo "‚ùå Pillow not available"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "Checking app modules..."
python -c "from modern_llm_manager import modern_llm_manager; print('modern_llm_manager OK')" 2>/dev/null || echo "‚ùå modern_llm_manager not available"
python -c "from database import db; print('database OK')" 2>/dev/null || echo "‚ùå database not available"

echo "üîß System diagnostics complete"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
mkdir -p /app/data 2>/dev/null || echo "Could not create /app/data directory"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "server.py" ]; then
    echo "‚úÖ server.py found"
else
    echo "‚ùå server.py not found in $(pwd)"
    echo "Files in current directory:"
    ls -la
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –±–µ–∑ reload –≤ production
echo "‚úÖ Starting uvicorn server in production mode..."
exec uvicorn server:app --host 0.0.0.0 --port 8001 --workers 1