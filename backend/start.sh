#!/bin/bash
# –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω—ã–π start.sh –¥–ª—è Render.com v11.0 —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º tesseract PATH

echo "üöÄ Starting German AI Backend v11.0 - TESSERACT PATH FIX..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π PATH
echo "Current PATH: $PATH"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è tesseract
echo "Searching for tesseract..."
find /usr -name "tesseract" -type f 2>/dev/null | head -5
which tesseract 2>/dev/null || echo "which tesseract: not found"
ls -la /usr/bin/tesseract 2>/dev/null || echo "/usr/bin/tesseract: not found"
ls -la /usr/local/bin/tesseract 2>/dev/null || echo "/usr/local/bin/tesseract: not found"

# –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å tesseract –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
if ! command -v tesseract &> /dev/null; then
    echo "‚ùå tesseract not found, trying to install..."
    
    if command -v apt-get &> /dev/null; then
        echo "Installing tesseract with apt-get..."
        apt-get update && apt-get install -y \
            tesseract-ocr \
            tesseract-ocr-deu \
            tesseract-ocr-rus \
            tesseract-ocr-eng \
            tesseract-ocr-ukr \
        && echo "‚úÖ tesseract installed" \
        || echo "‚ùå failed to install tesseract"
    else
        echo "‚ùå apt-get not available, cannot install tesseract"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º tesseract –µ—â–µ —Ä–∞–∑
if command -v tesseract &> /dev/null; then
    echo "‚úÖ tesseract found in PATH"
    tesseract --version | head -1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    echo "Checking language packs..."
    tesseract --list-langs 2>/dev/null || echo "Could not list languages"
else
    echo "‚ùå tesseract still not found in PATH"
    echo "Available commands in /usr/bin:"
    ls /usr/bin/ | grep -E "(tesseract|ocr)" || echo "No OCR tools found"
    echo "‚ö†Ô∏è OCR functionality will be limited"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º emergentintegrations
echo "Testing emergentintegrations..."
if python -c "import emergentintegrations; print('emergentintegrations OK')" 2>/dev/null; then
    echo "‚úÖ emergentintegrations available"
else
    echo "‚ùå emergentintegrations not available"
    echo "‚ö†Ô∏è Running in fallback mode without emergentintegrations"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "Testing Python dependencies..."
python -c "import pytesseract; print('pytesseract OK')" 2>/dev/null || echo "‚ùå pytesseract not available"
python -c "import cv2; print('opencv-python OK')" 2>/dev/null || echo "‚ùå opencv-python not available"
python -c "import PIL; print('Pillow OK')" 2>/dev/null || echo "‚ùå Pillow not available"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "Testing app modules..."
python -c "from modern_llm_manager import modern_llm_manager; print('modern_llm_manager OK')" 2>/dev/null || echo "‚ùå modern_llm_manager not available"
python -c "from database import db; print('database OK')" 2>/dev/null || echo "‚ùå database not available"

echo "üîß System diagnostics complete"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
mkdir -p /app/data 2>/dev/null || echo "Could not create /app/data directory"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "server.py" ]; then
    echo "‚úÖ server.py found"
else
    echo "‚ùå server.py not found in $(pwd)"
    echo "Files in current directory:"
    ls -la
    exit 1
fi

echo "‚úÖ Starting uvicorn server..."
exec uvicorn server:app --host 0.0.0.0 --port 8001 --reload