# Используем официальный Python образ
FROM python:3.11-slim

# Устанавливаем рабочую директорию
WORKDIR /app

# Обновляем систему и устанавливаем необходимые системные пакеты
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    tesseract-ocr-deu \
    tesseract-ocr-rus \
    tesseract-ocr-eng \
    tesseract-ocr-ukr \
    libtesseract-dev \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    curl \
    poppler-utils \
    && rm -rf /var/lib/apt/lists/*

# Ensure tesseract is in PATH
ENV PATH="/usr/bin:${PATH}"

# Проверяем установку tesseract
RUN tesseract --version

# Обновляем pip до последней версии
RUN pip install --upgrade pip

# Копируем файлы зависимостей
COPY backend/requirements.txt .

# Устанавливаем стандартные зависимости
RUN pip install --no-cache-dir -r requirements.txt

# Копируем backend код
COPY backend/ .

# Устанавливаем emergentintegrations во время сборки с обработкой ошибок
RUN pip install emergentintegrations --extra-index-url https://d33sy5i8bnduwe.cloudfront.net/simple/ --trusted-host d33sy5i8bnduwe.cloudfront.net || \
    echo "Warning: emergentintegrations installation failed, application will run in fallback mode"

# Проверяем что emergentintegrations установлен (не критично для работы)
RUN python -c "from emergentintegrations.llm.chat import LlmChat; print('emergentintegrations installed successfully')" || \
    echo "Warning: emergentintegrations not available, fallback mode will be used"

# Создаем директорию для SQLite базы данных
RUN mkdir -p /app/data

# Устанавливаем переменные окружения
ENV SQLITE_DB_PATH=/app/data/german_ai.db
ENV TESSERACT_AVAILABLE=true
ENV TESSERACT_VERSION=5.3.0

# Делаем start.sh исполняемым
RUN chmod +x start.sh

# Открываем порт 8001
EXPOSE 8001

# Запускаем приложение через start.sh
CMD ["./start.sh"]