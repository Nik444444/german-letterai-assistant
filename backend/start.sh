#!/bin/bash
# –£–ª—É—á—à–µ–Ω–Ω—ã–π start.sh –¥–ª—è Render.com - –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∑–∞–ø—É—Å–∫

echo "üöÄ Starting German AI Backend v13.0 - Render Production Mode..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ PATH
echo "Working directory: $(pwd)"
echo "Current PATH: $PATH"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å tesseract
echo "Checking tesseract availability..."
if command -v tesseract &> /dev/null; then
    echo "‚úÖ tesseract found in PATH: $(which tesseract)"
    tesseract --version | head -1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    echo "Available languages:"
    tesseract --list-langs 2>/dev/null || echo "Could not list languages"
else
    echo "‚ùå tesseract not found in PATH"
    echo "‚ö†Ô∏è OCR functionality will be limited"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º emergentintegrations
echo "Checking emergentintegrations..."
if python -c "import emergentintegrations; print('emergentintegrations version:', emergentintegrations.__version__ if hasattr(emergentintegrations, '__version__') else 'unknown')" 2>/dev/null; then
    echo "‚úÖ emergentintegrations available"
else
    echo "‚ùå emergentintegrations not available"
    echo "‚ö†Ô∏è Running in fallback mode without emergentintegrations"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "Checking Python dependencies..."
python -c "import pytesseract; print('pytesseract OK')" 2>/dev/null || echo "‚ùå pytesseract not available"
python -c "import cv2; print('opencv-python OK')" 2>/dev/null || echo "‚ùå opencv-python not available"
python -c "import PIL; print('Pillow OK')" 2>/dev/null || echo "‚ùå Pillow not available"
python -c "import httpcore; print('httpcore OK')" 2>/dev/null || echo "‚ùå httpcore not available"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "Checking app modules..."
python -c "from modern_llm_manager import modern_llm_manager; print('modern_llm_manager OK')" 2>/dev/null || echo "‚ùå modern_llm_manager not available"

echo "üîß System diagnostics complete"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
mkdir -p /opt/render/project/src/backend/data 2>/dev/null || echo "Using default database path"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "server.py" ]; then
    echo "‚úÖ server.py found"
else
    echo "‚ùå server.py not found in $(pwd)"
    echo "Files in current directory:"
    ls -la
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Render
export TESSERACT_AVAILABLE=true
export TESSERACT_VERSION=5.3.0
export SQLITE_DB_PATH=/opt/render/project/src/backend/data/german_ai.db

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—Ç–æ–º –¥–ª—è Render
echo "‚úÖ Starting uvicorn server on port ${PORT:-8001} in production mode..."
exec uvicorn server:app --host 0.0.0.0 --port ${PORT:-8001} --workers 1